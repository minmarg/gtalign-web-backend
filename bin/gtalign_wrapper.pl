#!/usr/bin/env perl
BEGIN {$^W=1}

## (C) 2024 Mindaugas Margelevicius, Institute of Biotechnology, Vilnius University
## Wrapper for conducting GTalign search

use strict;
use FindBin;
use lib "$FindBin::Bin";
use readcfg;
use readopt;
use usearch;
use File::Spec;
use File::Basename;
use Getopt::Long;
use POSIX qw(strftime);

my  $MYPROGNAME = basename($0);
my  $usage = <<EOIN;

Wrapper for conducting GTalign search.
(C)2024 Mindaugas Margelevicius, Institute of Biotechnology, Vilnius University

Usage:
$0 <Options>

Options:

--in <input>     Input structures, search queries, in PDB or CIF format,
                 optionally gzipped.

--opt <options>  Filename of options for this job.

--status <file>  Name of the output status file of computation progress
                 messages.

--logfile <logfile> Name of the output log file generated by GTalign
                 during a search.

--reslst <file>  Name of the output file listing the results files for the
                 queries.

--results <file> Name of the compressed output file containing results
                 files for all queries. (Extension .gz will be added.)

--err <errfile>  Name of the file of high-level error messages to write to on
                 error.

--norun          Do not run GTalign.

--help           This help text.

EOIN


my  $INPFILENAME = '';
my  $OPTFILENAME = '';
my  $STAFILENAME = '';
my  $COMLOGFILENAME = '';
my  $RESLSTFILENAME = '';
my  $RESULTSFILENAME = '';
my  $ERRFILENAME = '';
my  $NORUN = 0;
my  $Fail = 0;

my  $result = GetOptions(
               'in=s'       => \$INPFILENAME,
               'opt=s'      => \$OPTFILENAME,
               'status=s'   => \$STAFILENAME,
               'logfile=s'  => \$COMLOGFILENAME,
               'reslst=s'   => \$RESLSTFILENAME,
               'results=s'  => \$RESULTSFILENAME,
               'err=s'      => \$ERRFILENAME,
               'norun'      => \$NORUN,
               'help|h'     => sub {print $usage; exit(0);}
);

my $cos = usearch->new();

unless($result) {
    Error("ERROR: $MYPROGNAME: Error in command-line arguments.\n",
            "Command-line arguments error.\n");## h-l error message
    $cos->MyExit(1);
}

$cos->SetOptions(
    $INPFILENAME, $OPTFILENAME, $STAFILENAME, 
    $COMLOGFILENAME, $RESLSTFILENAME, $RESULTSFILENAME, 
    $ERRFILENAME, $NORUN, 'gtalign');

$cos->Initialize();

## =============================================================================
## MAIN
##

my  $infmsg = '';##info message
my  $errmsg = "ERROR: $MYPROGNAME: Invalid job options.\n";
my  $hlerrmsg = "Invalid job options.\n";

unless($cos->VerifyOptionValues(\$errmsg, \$hlerrmsg)) {
    $cos->Error($errmsg, $hlerrmsg);## err msg and h-l error message
    $cos->MyExit(1);
}

my  $nqueries = 0;## :shared = 0;##number of individual queries/inputs
my  %inputs;## :shared;##all inputs divided

$errmsg = "ERROR: $MYPROGNAME: Distribution of the input to subdirs failed.\n";
$hlerrmsg = "Parsing or distribution of the input failed.\n";

$cos->ProgressMsg("Preparing input...\n");

unless($cos->PreprocessInput(
        \$nqueries, \$infmsg, \$errmsg, \$hlerrmsg)) {
    $cos->Error($errmsg, $hlerrmsg);## err msg and h-l error message
    $cos->MyExit(1);
}

$cos->ProgressMsg("$infmsg\n") if $infmsg;

$errmsg = '';
$hlerrmsg = '';
my $oneworker;

##print errors and messages if any, returned from threads
##$cos->CheckForErrorsandWarnings($nqueries, \%inputs);

unless($cos->{NORUN}) {

    $cos->ProgressMsg("Searching structures using GTalign...\n");

    unless($cos->RunGTalign(\$nqueries, \%inputs, \$errmsg, \$hlerrmsg)) { 
        $cos->Error($errmsg, $hlerrmsg);
        $cos->MyExit(1);
    }

    $cos->ProgressMsg("Finalizing results...\n");

    my  @resfilelist;

    unless($cos->MakeResultsList(\@resfilelist, $nqueries, \%inputs, \$errmsg, \$hlerrmsg)) {
        $cos->Error($errmsg, $hlerrmsg);
        $cos->MyExit(1);
    }

    unless($cos->CompressResults(\@resfilelist, \$errmsg, \$hlerrmsg)) {
        $cos->Error($errmsg, $hlerrmsg);
        $cos->MyExit(1);
    }
}

$cos->ProgressMsg("Finished.\n");

$cos->MyExit(0);

## =============================================================================
